{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Parameters": {
		"KeyName" : {
			"Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type" : "String",
			"MinLength": "1",
			"MaxLength": "64",
			"AllowedPattern" : "[-_ a-zA-Z0-9]*",
			"ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
		},
		"VpcCidr": {
			"Description": "CIDR address for the VPC to be created.",
			"Type": "String",
			"Default": "10.0.0.0/16"
		},
		"PublicSubnet1": {
			"Description": "Address range for a public subnet to be created in AZ1.",
			"Type": "String",
			"Default": "10.0.2.0/24"
		},
		"PublicSubnet2": {
			"Description": "Address range for a public subnet to be created in AZ2.",
			"Type": "String",
			"Default": "10.0.4.0/24"
		},
		"PrivateSubnet1": {
			"Description": "Address range for a public subnet to be created in AZ1.",
			"Type": "String",
			"Default": "10.0.1.0/24"
		},
		"PrivateSubnet2": {
			"Description": "Address range for a public subnet to be created in AZ2.",
			"Type": "String",
			"Default": "10.0.3.0/24"
		},
		"NATNodeInstanceType": {
			"Description": "Instance type for NAT nodes.",
			"Type": "String",
			"Default": "m1.small",
			"AllowedValues": ["t1.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "cc2.8xlarge", "cg1.4xlarge"],
			"ConstraintDescription": "must be a valid EC2 instance type."
		},
		"AvailabilityZone1": {
			"Description": "First AZ to use for PublicSubnet1/PrivateSubnet1.",
			"Type": "String",
			"Default": "us-west-2a"
		},
		"AvailabilityZone2": {
			"Description": "Second AZ to use for PublicSubnet2/PrivateSubnet2.",
			"Type": "String",
			"Default": "us-west-2b"
		},
		"AppBaseAMI": {
			"Description": "Name of the application base AMI",
			"Type": "String",
			"Default": "ami-84d7b7b4"
		}
	},

	"Mappings": {
		"AWSNATAMI": {
			"us-east-1": {
				"AMI": "ami-54cf5c3d"
			},
			"us-west-2": {
				"AMI": "ami-8e27adbe"
			},
			"us-west-1": {
				"AMI": "ami-b63210f3"
			},
			"eu-west-1": {
				"AMI": "ami-3c5f5748"
			},
			"ap-southeast-1": {
				"AMI": "ami-ba7538e8"
			},
			"ap-southeast-2": {
				"AMI": "ami-b6df4e8c"
			},
			"ap-northeast-1": {
				"AMI": "ami-5d7dfa5c"
			},
			"sa-east-1": {
				"AMI": "ami-89c81394"
			}
		}
	},

	"Resources": {

		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Ref": "VpcCidr"
				},
      			"EnableDnsSupport" : "true",
      			"EnableDnsHostnames" : "true",
      			"InstanceTenancy" : "default"
			}
		},

		"PubSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"AvailabilityZone": { "Ref": "AvailabilityZone1" },
				"CidrBlock": { "Ref": "PublicSubnet1" },
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},

		"PriSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"AvailabilityZone": { "Ref": "AvailabilityZone1" },
				"CidrBlock": { "Ref": "PrivateSubnet1" },
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},

		"PubSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"AvailabilityZone": { "Ref": "AvailabilityZone2" },
				"CidrBlock": { "Ref": "PublicSubnet2" },
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},

		"PriSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"AvailabilityZone": { "Ref": "AvailabilityZone2" },
				"CidrBlock": { "Ref": "PrivateSubnet2" },
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},

		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},

		"GatewayToInternet": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"InternetGatewayId": { "Ref": "InternetGateway" }
			}
		},

		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},

		"PrivateRouteTable1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},

		"PrivateRouteTable2": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"Tags": [{
					"Key": "Network",
					"Value": "Private"
				}]
			}
		},

		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": { "Ref": "PublicRouteTable" },
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": { "Ref": "InternetGateway" }
			}
		},

		"PrivateRoute1": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": { "Ref": "PrivateRouteTable1" },
				"DestinationCidrBlock": "0.0.0.0/0",
				"InstanceId": { "Ref": "NAT1Instance" }
			}
		},

		"PrivateRoute2": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": { "Ref": "PrivateRouteTable2" },
				"DestinationCidrBlock": "0.0.0.0/0",
				"InstanceId": { "Ref": "NAT2Instance" }
			}
		},

		"PubSubnet1RTAssoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": { "Ref": "PubSubnet1" },
				"RouteTableId": { "Ref": "PublicRouteTable" }
			}
		},

		"PubSubnet2RTAssoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": { "Ref": "PubSubnet2" },
				"RouteTableId": { "Ref": "PublicRouteTable" }
			}
		},

		"PriSubnet1RTAssoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": { "Ref": "PriSubnet1" },
				"RouteTableId": { "Ref": "PrivateRouteTable1" }
			}
		},

		"PriSubnet2RTAssoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": { "Ref": "PriSubnet2" },
				"RouteTableId": { "Ref": "PrivateRouteTable2" }
			}
		},

		"NAT1EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc",
				"InstanceId": { "Ref": "NAT1Instance" }
			}
		},

		"NAT2EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc",
				"InstanceId": { "Ref": "NAT2Instance" }
			}
		},

		"NAT1Instance": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"Comment1": "Create NAT #1"
			},
			"Properties": {
				"InstanceType": { "Ref": "NATNodeInstanceType" },
				"KeyName": { "Ref": "KeyName" },
				"SubnetId": { "Ref": "PubSubnet1" },
				"SourceDestCheck": "false",
				"ImageId": { "Fn::FindInMap": ["AWSNATAMI", { "Ref": "AWS::Region" }, "AMI"]},
				"SecurityGroupIds": [{ "Ref": "NATSecurityGroup" }],
				"Tags": [{
					"Key": "Name",
					"Value": "NAT #1"
				}]
			}
		},

		"NAT2Instance": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"Comment1": "Create NAT #2"
			},
			"Properties": {
				"InstanceType": { "Ref": "NATNodeInstanceType" },
				"KeyName": { "Ref": "KeyName" },
				"SubnetId": { "Ref": "PubSubnet2" },
				"SourceDestCheck": "false",
				"ImageId": { "Fn::FindInMap": ["AWSNATAMI", { "Ref": "AWS::Region" }, "AMI"] },
				"SecurityGroupIds": [{ "Ref": "NATSecurityGroup" }],
				"Tags": [{
					"Key": "Name",
					"Value": "NAT #2"
				}]
			}
		},

		"NATSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Rules for allowing access to HA Nodes",
				"VpcId": { "Ref": "VPC" },
				"SecurityGroupIngress": [
				{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "-1",
					"FromPort": "0",
					"ToPort": "65535",
					"CidrIp": { "Ref": "VpcCidr" }
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "-1",
					"FromPort": "0",
					"ToPort": "65535",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},

		"blogELBSg": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "blog elb security group",
				"VpcId": { "Ref": "VPC" },
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					},

					{
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},

		"blogSg": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "blog project",
				"VpcId": { "Ref": "VPC" },
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"SourceSecurityGroupId": {
							"Ref": "blogELBSg"
						}
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"SourceSecurityGroupId": {
							"Ref": "blogELBSg"
						}
					}
				]
			}
		},

		"blogElb": {
			"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			"Properties": {
				"Subnets": [
					{ "Ref": "PriSubnet1" },
					{ "Ref": "PriSubnet2" }
				],
				"SecurityGroups": [{
					"Ref": "blogELBSg"
				}],
				"HealthCheck": {
					"HealthyThreshold": "7",
					"Interval": "6",
					"Target": "HTTPS:443/about/index",
					"Timeout": "3",
					"UnhealthyThreshold": "3"
				},
				"Listeners": [{
					"InstancePort": "80",
					"LoadBalancerPort": "80",
					"Protocol": "HTTP",
					"InstanceProtocol": "HTTP"
				}, {
					"InstancePort": "443",
					"LoadBalancerPort": "443",
					"Protocol": "TCP",
					"InstanceProtocol": "TCP"
				}]
			}
		},

		"blogAsg": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"AvailabilityZones": [
					{ "Ref": "AvailabilityZone1" },
					{ "Ref": "AvailabilityZone2" }
				],
				"VPCZoneIdentifier": [
					{ "Ref": "PriSubnet1" },
					{ "Ref": "PriSubnet2" }
				],
				"Tags": [{
					"Key": "grails-blog",
					"Value": "0.0.1",
					"PropagateAtLaunch": "true"
				}],

				"Cooldown": "10",
				"DesiredCapacity": "1",
				"MinSize": "1",
				"MaxSize": "1",
				"HealthCheckGracePeriod": "600",
				"HealthCheckType": "ELB",
				"LaunchConfigurationName": {
					"Ref": "blogLaunchconfig"
				},
				"LoadBalancerNames": [{ "Ref": "blogElb" }]
			}
		},

		"blogLaunchconfig": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"AssociatePublicIpAddress": "true",
				"ImageId": { "Ref": "AppBaseAMI" },
				"InstanceType": "m1.small",
				"EbsOptimized": "false",
				"KeyName": { "Ref": "KeyName" },
				"InstanceMonitoring": "false",
				"SecurityGroups": [{
					"Ref": "blogSg"
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -x\n",
							"chmod a+x /opt/provision/*.*\n",
							"export STACK=\"qa1\"\n",
							"export SOLO_NODE=\"/opt/chef-solo/website/chef/solo-nodes/blog-cf-grails.json\"\n",
							"/opt/provision/ami-bootstrap.sh\n"
						]]
					}
				}
			}
		}

	},

	"Outputs" : {
		"NAT1" : {
			"Description" : "NAT #1 EIP.",
			"Value" :  { "Fn::Join" : [ "", [ { "Ref" : "NAT1Instance" }, " (", { "Ref" : "NAT1EIP" }, ")" ]] }
		},
		"NAT2" : {
			"Description" : "NAT #2 EIP.",
			"Value" :  { "Fn::Join" : [ "", [ { "Ref" : "NAT2Instance" }, " (", { "Ref" : "NAT2EIP" }, ")" ]] }
		},
		"VPCID" : {
			"Description" : "VPC Info.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPC" }, " (", { "Ref" : "VpcCidr" }, ")" ]] }
		},
		"PublicSubnet1" : {
			"Description" : "Public Subnet #1.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PubSubnet1" }, " (", { "Ref" : "PublicSubnet1" }, ") ", { "Ref" : "AvailabilityZone1" } ]] }
		},
		"PrivateSubnet1" : {
			"Description" : "Private Subnet #1.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PriSubnet1" }, " (", { "Ref" : "PrivateSubnet1" }, ") ", { "Ref" : "AvailabilityZone1" } ]] }
		},
		"PublicSubnet2" : {
			"Description" : "Public Subnet #2.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PubSubnet2" }, " (", { "Ref" : "PublicSubnet2" }, ") ", { "Ref" : "AvailabilityZone2" } ]] }
		},
		"PrivateSubnet2" : {
			"Description" : "Private Subnet #2.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PriSubnet2" }, " (", { "Ref" : "PrivateSubnet2" }, ") ", { "Ref" : "AvailabilityZone2" } ]] }
		},
		"PublicRouteTable" : {
			"Description" : "Public Route Table.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PublicRouteTable" }, " (0.0.0.0/0 -> ", { "Ref" : "InternetGateway" }, ")" ]] }
		},
		"PrivateRouteTable1" : {
			"Description" : "Private Route Table #1.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateRouteTable1" }, " (0.0.0.0/0 -> ", { "Ref" : "NAT1Instance" }, ")" ]] }
		},
		"PrivateRouteTable2" : {
			"Description" : "Private Route Table #2.",
			"Value" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateRouteTable2" }, " (0.0.0.0/0 -> ", { "Ref" : "NAT2Instance" }, ")" ]] }
		}
	}
}
